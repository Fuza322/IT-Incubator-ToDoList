[{"D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\features\\Login\\auth-reducer.ts":"1","D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\features\\TodolistsList\\tasks-reducer.ts":"2","D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\features\\TodolistsList\\todolists-reducer.ts":"3","D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\features\\Login\\Login.tsx":"4","D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\app\\App.tsx":"5","D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"6","D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"7","D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\api\\todolists-api.ts":"8","D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"9","D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\components\\EditableSpan\\EditableSpan.tsx":"10","D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\app\\store.ts":"11","D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\reportWebVitals.ts":"12","D:\\Education\\BSUIR\\Graduate-Work-TaskTracker\\src\\reportWebVitals.ts":"13","D:\\Education\\BSUIR\\Graduate-Work-TaskTracker\\src\\features\\Login\\Login.tsx":"14","D:\\Education\\BSUIR\\Graduate-Work-TaskTracker\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"15","D:\\Education\\BSUIR\\Graduate-Work-TaskTracker\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"16","D:\\Education\\BSUIR\\Graduate-Work-TaskTracker\\src\\components\\ProgressBar\\ProgressBar.tsx":"17","D:\\Education\\BSUIR\\Graduate-Work-TaskTracker\\src\\index.tsx":"18","D:\\Education\\BSUIR\\Graduate-Work-TaskTracker\\src\\features\\TodolistsList\\tasks-reducer.ts":"19"},{"size":1992,"mtime":1620595028160,"results":"20","hashOfConfig":"21"},{"size":5633,"mtime":1596722126000,"results":"22","hashOfConfig":"21"},{"size":4583,"mtime":1620490154529,"results":"23","hashOfConfig":"21"},{"size":3822,"mtime":1620822936954,"results":"24","hashOfConfig":"21"},{"size":2596,"mtime":1620595243143,"results":"25","hashOfConfig":"21"},{"size":4193,"mtime":1596715250000,"results":"26","hashOfConfig":"21"},{"size":1773,"mtime":1620790521299,"results":"27","hashOfConfig":"21"},{"size":3112,"mtime":1620595847910,"results":"28","hashOfConfig":"21"},{"size":1092,"mtime":1596716576000,"results":"29","hashOfConfig":"21"},{"size":952,"mtime":1594154724000,"results":"30","hashOfConfig":"21"},{"size":1183,"mtime":1619120016816,"results":"31","hashOfConfig":"21"},{"size":440,"mtime":1620790521299,"results":"32","hashOfConfig":"21"},{"size":440,"mtime":1621262412607,"results":"33","hashOfConfig":"34"},{"size":3862,"mtime":1621262412604,"results":"35","hashOfConfig":"34"},{"size":1965,"mtime":1621262412605,"results":"36","hashOfConfig":"34"},{"size":5095,"mtime":1621268298223,"results":"37","hashOfConfig":"34"},{"size":950,"mtime":1621268801298,"results":"38","hashOfConfig":"34"},{"size":776,"mtime":1621262412607,"results":"39","hashOfConfig":"34"},{"size":5556,"mtime":1621262412606,"results":"40","hashOfConfig":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uddcxz",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vdy6jm",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\features\\Login\\auth-reducer.ts",[],"D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\features\\TodolistsList\\tasks-reducer.ts",["81","82"],"import {AddTodolistActionType, RemoveTodolistActionType, SetTodolistsActionType} from './todolists-reducer'\r\nimport {TaskPriorities, TaskStatuses, TaskType, todolistsAPI, UpdateTaskModelType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\nimport {handleServerAppError, handleServerNetworkError} from '../../utils/error-utils'\r\n\r\nconst initialState: TasksStateType = {}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK':\r\n            return {...state, [action.todolistId]: state[action.todolistId].filter(t => t.id != action.taskId)}\r\n        case 'ADD-TASK':\r\n            return {...state, [action.task.todoListId]: [action.task, ...state[action.task.todoListId]]}\r\n        case 'UPDATE-TASK':\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: state[action.todolistId]\r\n                    .map(t => t.id === action.taskId ? {...t, ...action.model} : t)\r\n            }\r\n        case 'ADD-TODOLIST':\r\n            return {...state, [action.todolist.id]: []}\r\n        case 'REMOVE-TODOLIST':\r\n            const copyState = {...state}\r\n            delete copyState[action.id]\r\n            return copyState\r\n        case 'SET-TODOLISTS': {\r\n            const copyState = {...state}\r\n            action.todolists.forEach(tl => {\r\n                copyState[tl.id] = []\r\n            })\r\n            return copyState\r\n        }\r\n        case 'SET-TASKS':\r\n            return {...state, [action.todolistId]: action.tasks}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTaskAC = (taskId: string, todolistId: string) =>\r\n    ({type: 'REMOVE-TASK', taskId, todolistId} as const)\r\nexport const addTaskAC = (task: TaskType) =>\r\n    ({type: 'ADD-TASK', task} as const)\r\nexport const updateTaskAC = (taskId: string, model: UpdateDomainTaskModelType, todolistId: string) =>\r\n    ({type: 'UPDATE-TASK', model, todolistId, taskId} as const)\r\nexport const setTasksAC = (tasks: Array<TaskType>, todolistId: string) =>\r\n    ({type: 'SET-TASKS', tasks, todolistId} as const)\r\n\r\n// thunks\r\nexport const fetchTasksTC = (todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppStatusActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.getTasks(todolistId)\r\n        .then((res) => {\r\n            const tasks = res.data.items\r\n            dispatch(setTasksAC(tasks, todolistId))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const removeTaskTC = (taskId: string, todolistId: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    todolistsAPI.deleteTask(todolistId, taskId)\r\n        .then(res => {\r\n            const action = removeTaskAC(taskId, todolistId)\r\n            dispatch(action)\r\n        })\r\n}\r\nexport const addTaskTC = (title: string, todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppErrorActionType | SetAppStatusActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.createTask(todolistId, title)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                const task = res.data.data.item\r\n                const action = addTaskAC(task)\r\n                dispatch(action)\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            } else {\r\n                handleServerAppError(res.data, dispatch);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n}\r\nexport const updateTaskTC = (taskId: string, domainModel: UpdateDomainTaskModelType, todolistId: string) =>\r\n    (dispatch: ThunkDispatch, getState: () => AppRootStateType) => {\r\n        const state = getState()\r\n        const task = state.tasks[todolistId].find(t => t.id === taskId)\r\n        if (!task) {\r\n            //throw new Error(\"task not found in the state\");\r\n            console.warn('task not found in the state')\r\n            return\r\n        }\r\n\r\n        const apiModel: UpdateTaskModelType = {\r\n            deadline: task.deadline,\r\n            description: task.description,\r\n            priority: task.priority,\r\n            startDate: task.startDate,\r\n            title: task.title,\r\n            status: task.status,\r\n            ...domainModel\r\n        }\r\n\r\n        todolistsAPI.updateTask(todolistId, taskId, apiModel)\r\n            .then(res => {\r\n                if (res.data.resultCode === 0) {\r\n                    const action = updateTaskAC(taskId, domainModel, todolistId)\r\n                    dispatch(action)\r\n                } else {\r\n                    handleServerAppError(res.data, dispatch);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                handleServerNetworkError(error, dispatch);\r\n            })\r\n    }\r\n\r\n// types\r\nexport type UpdateDomainTaskModelType = {\r\n    title?: string\r\n    description?: string\r\n    status?: TaskStatuses\r\n    priority?: TaskPriorities\r\n    startDate?: string\r\n    deadline?: string\r\n}\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\ntype ActionsType =\r\n    | ReturnType<typeof removeTaskAC>\r\n    | ReturnType<typeof addTaskAC>\r\n    | ReturnType<typeof updateTaskAC>\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof setTasksAC>\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\r\n","D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\features\\TodolistsList\\todolists-reducer.ts",["83"],"import {todolistsAPI, TodolistType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {RequestStatusType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id != action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [{...action.todolist, filter: 'all', entityStatus: 'idle'}, ...state]\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return state.map(tl => tl.id === action.id ? {...tl, title: action.title} : tl)\r\n        case 'CHANGE-TODOLIST-FILTER':\r\n            return state.map(tl => tl.id === action.id ? {...tl, filter: action.filter} : tl)\r\n        case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n            return state.map(tl => tl.id === action.id ? {...tl, entityStatus: action.status} : tl)\r\n        case 'SET-TODOLISTS':\r\n            return action.todolists.map(tl => ({...tl, filter: 'all', entityStatus: 'idle'}))\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({type: 'REMOVE-TODOLIST', id} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({type: 'ADD-TODOLIST', todolist} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id,\r\n    title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id,\r\n    filter\r\n} as const)\r\nexport const changeTodolistEntityStatusAC = (id: string, status: RequestStatusType) => ({\r\n    type: 'CHANGE-TODOLIST-ENTITY-STATUS', id, status } as const)\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: 'SET-TODOLISTS', todolists} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res.data))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        //изменим глобальный статус приложения, чтобы вверху полоса побежала\r\n        dispatch(setAppStatusAC('loading'))\r\n        //изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\r\n        dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                dispatch(removeTodolistAC(todolistId))\r\n                //скажем глобально приложению, что асинхронная операция завершена\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                dispatch(addTodolistAC(res.data.data.item))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                dispatch(changeTodolistTitleAC(id, title))\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof changeTodolistEntityStatusAC>\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType>\r\n","D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\features\\Login\\Login.tsx",[],"D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\app\\App.tsx",["84"],"D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["85","86","87","88","89","90"],"D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["91","92","93"],"D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\api\\todolists-api.ts",[],"D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\app\\store.ts",[],"D:\\Education\\IT-Incubator\\Projects\\it-incubator-todolist\\src\\reportWebVitals.ts",[],"D:\\Education\\BSUIR\\Graduate-Work-TaskTracker\\src\\reportWebVitals.ts",[],"D:\\Education\\BSUIR\\Graduate-Work-TaskTracker\\src\\features\\Login\\Login.tsx",["94"],"D:\\Education\\BSUIR\\Graduate-Work-TaskTracker\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["95","96","97","98"],"D:\\Education\\BSUIR\\Graduate-Work-TaskTracker\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["99","100","101","102","103","104","105"],"D:\\Education\\BSUIR\\Graduate-Work-TaskTracker\\src\\components\\ProgressBar\\ProgressBar.tsx",[],"D:\\Education\\BSUIR\\Graduate-Work-TaskTracker\\src\\index.tsx",[],"D:\\Education\\BSUIR\\Graduate-Work-TaskTracker\\src\\features\\TodolistsList\\tasks-reducer.ts",[],{"ruleId":"106","severity":1,"message":"107","line":5,"column":9,"nodeType":"108","messageId":"109","endLine":5,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":13,"column":94,"nodeType":"112","messageId":"113","endLine":13,"endColumn":96},{"ruleId":"110","severity":1,"message":"111","line":10,"column":45,"nodeType":"112","messageId":"113","endLine":10,"endColumn":47},{"ruleId":"106","severity":1,"message":"114","line":10,"column":9,"nodeType":"108","messageId":"109","endLine":10,"endColumn":22},{"ruleId":"115","severity":1,"message":"116","line":35,"column":8,"nodeType":"117","endLine":35,"endColumn":10,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":39,"column":8,"nodeType":"117","endLine":39,"endColumn":42,"suggestions":"120"},{"ruleId":"115","severity":1,"message":"119","line":46,"column":8,"nodeType":"117","endLine":46,"endColumn":54,"suggestions":"121"},{"ruleId":"115","severity":1,"message":"119","line":48,"column":95,"nodeType":"117","endLine":48,"endColumn":134,"suggestions":"122"},{"ruleId":"115","severity":1,"message":"119","line":49,"column":101,"nodeType":"117","endLine":49,"endColumn":140,"suggestions":"123"},{"ruleId":"115","severity":1,"message":"119","line":50,"column":107,"nodeType":"117","endLine":50,"endColumn":146,"suggestions":"124"},{"ruleId":"115","severity":1,"message":"119","line":15,"column":97,"nodeType":"117","endLine":15,"endColumn":130,"suggestions":"125"},{"ruleId":"115","severity":1,"message":"119","line":20,"column":8,"nodeType":"117","endLine":20,"endColumn":41,"suggestions":"126"},{"ruleId":"115","severity":1,"message":"119","line":24,"column":8,"nodeType":"117","endLine":24,"endColumn":41,"suggestions":"127"},{"ruleId":"106","severity":1,"message":"128","line":8,"column":8,"nodeType":"108","messageId":"109","endLine":8,"endColumn":13},{"ruleId":"106","severity":1,"message":"128","line":6,"column":8,"nodeType":"108","messageId":"109","endLine":6,"endColumn":13},{"ruleId":"115","severity":1,"message":"119","line":16,"column":97,"nodeType":"117","endLine":16,"endColumn":130,"suggestions":"129"},{"ruleId":"115","severity":1,"message":"119","line":21,"column":8,"nodeType":"117","endLine":21,"endColumn":41,"suggestions":"130"},{"ruleId":"115","severity":1,"message":"119","line":25,"column":8,"nodeType":"117","endLine":25,"endColumn":41,"suggestions":"131"},{"ruleId":"106","severity":1,"message":"128","line":12,"column":8,"nodeType":"108","messageId":"109","endLine":12,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":39,"column":8,"nodeType":"117","endLine":39,"endColumn":10,"suggestions":"132"},{"ruleId":"115","severity":1,"message":"119","line":43,"column":8,"nodeType":"117","endLine":43,"endColumn":42,"suggestions":"133"},{"ruleId":"115","severity":1,"message":"119","line":50,"column":8,"nodeType":"117","endLine":50,"endColumn":54,"suggestions":"134"},{"ruleId":"115","severity":1,"message":"119","line":52,"column":95,"nodeType":"117","endLine":52,"endColumn":134,"suggestions":"135"},{"ruleId":"115","severity":1,"message":"119","line":53,"column":101,"nodeType":"117","endLine":53,"endColumn":140,"suggestions":"136"},{"ruleId":"115","severity":1,"message":"119","line":54,"column":107,"nodeType":"117","endLine":54,"endColumn":146,"suggestions":"137"},"@typescript-eslint/no-unused-vars","'setAppErrorAC' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'BrowserRouter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.","ArrayExpression",["138"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["139"],["140"],["141"],["142"],["143"],["144"],["145"],["146"],"'style' is defined but never used.",["147"],["148"],["149"],["150"],["151"],["152"],["153"],["154"],["155"],{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"158","fix":"160"},{"desc":"158","fix":"161"},{"desc":"158","fix":"162"},{"desc":"158","fix":"163"},{"desc":"158","fix":"164"},{"desc":"158","fix":"165"},{"desc":"158","fix":"166"},{"desc":"158","fix":"167"},{"desc":"158","fix":"168"},{"desc":"158","fix":"169"},{"desc":"156","fix":"170"},{"desc":"158","fix":"171"},{"desc":"158","fix":"172"},{"desc":"158","fix":"173"},{"desc":"158","fix":"174"},{"desc":"158","fix":"175"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"176","text":"177"},"Update the dependencies array to be: [props]",{"range":"178","text":"179"},{"range":"180","text":"179"},{"range":"181","text":"179"},{"range":"182","text":"179"},{"range":"183","text":"179"},{"range":"184","text":"179"},{"range":"185","text":"179"},{"range":"186","text":"179"},{"range":"187","text":"179"},{"range":"188","text":"179"},{"range":"189","text":"179"},{"range":"190","text":"177"},{"range":"191","text":"179"},{"range":"192","text":"179"},{"range":"193","text":"179"},{"range":"194","text":"179"},{"range":"195","text":"179"},[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],"[props]",[1846,1892],[1991,2030],[2133,2172],[2281,2320],[765,798],[1071,1104],[1261,1294],[804,837],[1110,1143],[1300,1333],[1611,1613],[1728,1762],[1993,2039],[2138,2177],[2280,2319],[2428,2467]]